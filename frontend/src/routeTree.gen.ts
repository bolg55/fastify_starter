/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as PricingImport } from './routes/pricing';
import { Route as AuthImport } from './routes/auth';

// Create Virtual Routes

const SecretLazyImport = createFileRoute('/secret')();
const IndexLazyImport = createFileRoute('/')();

// Create/Update Routes

const SecretLazyRoute = SecretLazyImport.update({
  path: '/secret',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/secret').then((d) => d.Route));

const PricingRoute = PricingImport.update({
  path: '/pricing',
  getParentRoute: () => rootRoute,
} as any);

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any);

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/auth': {
      preLoaderRoute: typeof AuthImport;
      parentRoute: typeof rootRoute;
    };
    '/pricing': {
      preLoaderRoute: typeof PricingImport;
      parentRoute: typeof rootRoute;
    };
    '/secret': {
      preLoaderRoute: typeof SecretLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AuthRoute,
  PricingRoute,
  SecretLazyRoute,
]);

/* prettier-ignore-end */
